tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(plots = l, ncol = 2)
# fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
fig <- wrap_plots(l, ncol = 2, nrow = 4, guides = "collect") & them(legend.position = "right")
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(plots = l, ncol = 2)
# fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
fig <- wrap_plots(l, ncol = 2, nrow = 4, guides = "collect") & theme(legend.position = "right")
# ggsave("../output/heat_fig.png", fig)
print(fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(plots = l, ncol = 2)
# fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
fig <- wrap_plots(l, ncol = 2, nrow = 4, guides = "collect") & theme(legend.position = "bottom")
# ggsave("../output/heat_fig.png", fig)
print(fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(plots = l, ncol = 2)
# fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
fig <- wrap_plots(l, ncol = 2, nrow = 4, guides = 'collect') & theme(legend.position = "bottom")
# ggsave("../output/heat_fig.png", fig)
print(fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(plots = l, ncol = 2)
# fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
fig <- wrap_plots(l, ncol = 2, nrow = 4) & theme(legend.position = "bottom")
# ggsave("../output/heat_fig.png", fig)
print(fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(plots = l, ncol = 2)
# fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
fig <- wrap_plots(l, ncol = 2, nrow = 4, guides = 'collect') & theme(legend.position = "bottom")
combined <- l$p_1550 + l$p_1600 + l$p_1650 + plot_layout(guides = "collect") & theme(legend.position = "right")
l$p_1750
l$p_1750
knitr::opts_chunk$set(echo = TRUE)
library(ggtern)
library(ggplot2)
library(tidyverse)
library(ggpubr)
library(patchwork)
library(reticulate)
#SOMETIMES FUNKY STUFF WITH USING PYTHON, COMMANDS BELOW CAN BE USED TO SET WHERE R LOOKS FOR PYTHON, BUT CURRENTLY NOT WORKING FOR SOME REASON.
# use_python("C:\\Users\\Austin\\anaconda3", required = TRUE)
# reticulate::use_python(Sys.which('python3'), required = TRUE)
reticulate::repl_python()
import pickle
import pandas as pd
import numpy as np
with open('../input/volumes_optimism.p', 'rb') as fp:
volumes_optimism = pickle.load(fp)
#This function essentially allows for directly calling the relevant dataframe from r
def dfyears(year):
df = volumes_optimism[year]
return df
quit
years <- seq(1510,1890, by=1)
# years <- seq(1510, 1890, by = 1) #generate years to iterate over
opt_max <- 0
num_max <- 0
opt_min <- Inf
num_min <- Inf
for (i in years) {
df <- py$dfyears(i)
p <-  ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",
centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=i, fill="Percentile", size="Volumes")
dat <- layer_data(p ,1)
opt <- dat$stat #grab vector of stats corresponding to triangle colors
num <- dat$count #grab vector of volume counts
opt <- opt[!is.na(opt)] #Take out NAs
num <- num[!is.na(num)]
if (max(opt) > opt_max) {
opt_max <- max(opt)
}
if (min(opt) < opt_min) {
opt_min <- min(opt)
}
if (max(num) > num_max) {
num_max <- max(num)
}
if (min(num) < num_min) {
num_min <- min(num)
}
}
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(plots = l, ncol = 2, nrow = 4)
# fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
fig <- wrap_plots(l, ncol = 2, nrow = 4) + plot_layout(guides = "collect") & theme(legend.position = "right")
# ggsave("../output/heat_fig.png", fig)
print(fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
fig <- ggarrange(plots = l, ncol = 2, nrow = 4, common.legend = TRUE)
# fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
# fig <- wrap_plots(l, ncol = 2, nrow = 4) + plot_layout(guides = "collect") & theme(legend.position = "right")
# ggsave("../output/heat_fig.png", fig)
print(fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
fig <- ggarrange(plots = l, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
# fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
# fig <- wrap_plots(l, ncol = 2, nrow = 4) + plot_layout(guides = "collect") & theme(legend.position = "right")
# ggsave("../output/heat_fig.png", fig)
print(fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
fig <- ggarrange(plots = l, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
# fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
# fig <- wrap_plots(l, ncol = 2, nrow = 4) + plot_layout(guides = "collect") & theme(legend.position = "right")
ggsave("../output/heat_fig.png", fig)
print(fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(plots = l, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
# fig <- wrap_plots(l, ncol = 2, nrow = 4) + plot_layout(guides = "collect") & theme(legend.position = "right")
ggsave("../output/heat_fig.png", fig)
print(fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(plots = l, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
# fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
fig <- wrap_plots(l, ncol = 2, nrow = 4) + plot_layout(guides = "collect") & theme(legend.position = "right")
ggsave("../output/heat_fig.png", fig)
print(fig)
