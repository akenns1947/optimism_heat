# theme_dark()+
# guides(size= guide_legend(reverse=TRUE))+
# theme(tern.axis.title.R = element_text(hjust=0.6))
path <- sprintf("../output/triangles/%s.pdf", i)
dat <- layer_data(p ,1)
opt <- dat$stat #grab vector of stats corresponding to triangle colors
num <- dat$count #grab vector of volume counts
opt <- opt[!is.na(opt)]
num <- num[!is.na(num)]
if (max(opt) > opt_max) {
opt_max <- max(opt)
}
if (max(num) > num_max) {
num_max <- max(num)
}
# ggsave(path)
}
years <- seq(1800, 1850, by = 1) #generate years to iterate over
opt_max <- 0
num_max <- 0
for (i in years) {
df <- py$dfyears(i)
p <-  ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=i, fill="Percentile", size="Volumes")
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
# scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
# scale_T_continuous(limits=c(0,1.0),
#                    breaks=seq(0,1,by=0.2),
#                    labels=label) +
# scale_L_continuous(limits=c(0.0,1),
#                    breaks=seq(0,1,by=0.2),
#                    labels=label) +
# scale_R_continuous(limits=c(0.0,1),
#                    breaks=seq(0,1,by=0.2),
#                    labels=label)+
# theme_dark()+
# guides(size= guide_legend(reverse=TRUE))+
# theme(tern.axis.title.R = element_text(hjust=0.6))
path <- sprintf("../output/triangles/%s.pdf", i)
dat <- layer_data(p ,1)
opt <- dat$stat #grab vector of stats corresponding to triangle colors
num <- dat$count #grab vector of volume counts
opt <- opt[!is.na(opt)]
num <- num[!is.na(num)]
if (max(opt) > opt_max) {
opt_max <- max(opt)
}
if (max(num) > num_max) {
num_max <- max(num)
}
# ggsave(path)
}
years <- seq(1800, 1802, by = 1) #generate years to iterate over
opt_max <- 0
num_max <- 0
opt_min <- Inf
num_min <- Inf
for (i in years) {
df <- py$dfyears(i)
p <-  ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=i, fill="Percentile", size="Volumes")
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
# scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
# scale_T_continuous(limits=c(0,1.0),
#                    breaks=seq(0,1,by=0.2),
#                    labels=label) +
# scale_L_continuous(limits=c(0.0,1),
#                    breaks=seq(0,1,by=0.2),
#                    labels=label) +
# scale_R_continuous(limits=c(0.0,1),
#                    breaks=seq(0,1,by=0.2),
#                    labels=label)+
# theme_dark()+
# guides(size= guide_legend(reverse=TRUE))+
# theme(tern.axis.title.R = element_text(hjust=0.6))
path <- sprintf("../output/triangles/%s.pdf", i)
dat <- layer_data(p ,1)
opt <- dat$stat #grab vector of stats corresponding to triangle colors
num <- dat$count #grab vector of volume counts
opt <- opt[!is.na(opt)]
num <- num[!is.na(num)]
if (max(opt) > opt_max) {
opt_max <- max(opt)
}
if (min(opt) < opt_min) {
opt_min <- min(opt)
}
if (max(num) > num_max) {
num_max <- max(num)
}
if (min(num) < num_min) {
num_min <- min(num)
}
# ggsave(path)
}
years <- seq(1510, 1890, by = 1) #generate years to iterate over
opt_max <- 0
num_max <- 0
opt_min <- Inf
num_min <- Inf
for (i in years) {
df <- py$dfyears(i)
p <-  ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=i, fill="Percentile", size="Volumes")
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
# scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
# scale_T_continuous(limits=c(0,1.0),
#                    breaks=seq(0,1,by=0.2),
#                    labels=label) +
# scale_L_continuous(limits=c(0.0,1),
#                    breaks=seq(0,1,by=0.2),
#                    labels=label) +
# scale_R_continuous(limits=c(0.0,1),
#                    breaks=seq(0,1,by=0.2),
#                    labels=label)+
# theme_dark()+
# guides(size= guide_legend(reverse=TRUE))+
# theme(tern.axis.title.R = element_text(hjust=0.6))
path <- sprintf("../output/triangles/%s.pdf", i)
dat <- layer_data(p ,1)
opt <- dat$stat #grab vector of stats corresponding to triangle colors
num <- dat$count #grab vector of volume counts
opt <- opt[!is.na(opt)]
num <- num[!is.na(num)]
if (max(opt) > opt_max) {
opt_max <- max(opt)
}
if (min(opt) < opt_min) {
opt_min <- min(opt)
}
if (max(num) > num_max) {
num_max <- max(num)
}
if (min(num) < num_min) {
num_min <- min(num)
}
# ggsave(path)
}
df <- py$dfyears(1800)
label = seq(0,1,by=.2)
ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
scale_size(range = c(num_min, num_max))
theme_dark()+
guides(size= guide_legend(reverse=TRUE))+
theme(tern.axis.title.R = element_text(hjust=0.6))
#  theme_legend_position(x="topright")
#
# ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
#   geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile), fun=mean) +
#   stat_tri_tern(bins=5,fun=count, geom= 'point',size=2,
#                 color="white",centroid=TRUE) +
#   labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile") +
#   theme()
#ggsave("../output/1800.pdf")
df <- py$dfyears(1800)
label = seq(0,1,by=.2)
ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
# scale_size(range = c(num_min, num_max))
theme_dark()+
guides(size= guide_legend(reverse=TRUE))+
theme(tern.axis.title.R = element_text(hjust=0.6))
#  theme_legend_position(x="topright")
#
# ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
#   geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile), fun=mean) +
#   stat_tri_tern(bins=5,fun=count, geom= 'point',size=2,
#                 color="white",centroid=TRUE) +
#   labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile") +
#   theme()
#ggsave("../output/1800.pdf")
df <- py$dfyears(1800)
label = seq(0,1,by=.2)
ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
# scale_size(range = c(num_min, num_max))
scale_size(range = (0,2500)) +
df <- py$dfyears(1800)
label = seq(0,1,by=.2)
ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
# scale_size(range = c(num_min, num_max))
scale_size(range = c(0,2500)) +
theme_dark()+
guides(size= guide_legend(reverse=TRUE))+
theme(tern.axis.title.R = element_text(hjust=0.6))
#  theme_legend_position(x="topright")
#
# ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
#   geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile), fun=mean) +
#   stat_tri_tern(bins=5,fun=count, geom= 'point',size=2,
#                 color="white",centroid=TRUE) +
#   labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile") +
#   theme()
#ggsave("../output/1800.pdf")
ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
# scale_size(range = c(num_min, num_max))
scale_size(range = c(0,2000)) +
theme_dark()+
guides(size= guide_legend(reverse=TRUE))+
theme(tern.axis.title.R = element_text(hjust=0.6))
df <- py$dfyears(1800)
label = seq(0,1,by=.2)
ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
# scale_size(range = c(num_min, num_max))
scale_size(range = c(0,10)) +
theme_dark()+
guides(size= guide_legend(reverse=TRUE))+
theme(tern.axis.title.R = element_text(hjust=0.6))
#  theme_legend_position(x="topright")
#
# ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
#   geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile), fun=mean) +
#   stat_tri_tern(bins=5,fun=count, geom= 'point',size=2,
#                 color="white",centroid=TRUE) +
#   labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile") +
#   theme()
#ggsave("../output/1800.pdf")
df <- py$dfyears(1800)
label = seq(0,1,by=.2)
ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
# scale_size(range = c(num_min, num_max))
scale_size(range = c(0,5)) +
theme_dark()+
guides(size= guide_legend(reverse=TRUE))+
theme(tern.axis.title.R = element_text(hjust=0.6))
#  theme_legend_position(x="topright")
#
# ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
#   geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile), fun=mean) +
#   stat_tri_tern(bins=5,fun=count, geom= 'point',size=2,
#                 color="white",centroid=TRUE) +
#   labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile") +
#   theme()
#ggsave("../output/1800.pdf")
df <- py$dfyears(1800)
label = seq(0,1,by=.2)
ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
# scale_size(range = c(num_min, num_max))
scale_size_continuous(range = c(0,5)) +
theme_dark()+
guides(size= guide_legend(reverse=TRUE))+
theme(tern.axis.title.R = element_text(hjust=0.6))
#  theme_legend_position(x="topright")
#
# ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
#   geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile), fun=mean) +
#   stat_tri_tern(bins=5,fun=count, geom= 'point',size=2,
#                 color="white",centroid=TRUE) +
#   labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile") +
#   theme()
#ggsave("../output/1800.pdf")
df <- py$dfyears(1800)
label = seq(0,1,by=.2)
ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
# scale_size(range = c(num_min, num_max))
scale_size_continuous(range = c(0,10)) +
theme_dark()+
guides(size= guide_legend(reverse=TRUE))+
theme(tern.axis.title.R = element_text(hjust=0.6))
#  theme_legend_position(x="topright")
#
# ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
#   geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile), fun=mean) +
#   stat_tri_tern(bins=5,fun=count, geom= 'point',size=2,
#                 color="white",centroid=TRUE) +
#   labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile") +
#   theme()
#ggsave("../output/1800.pdf")
df <- py$dfyears(1800)
label = seq(0,1,by=.2)
ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
# scale_size(range = c(num_min, num_max))
scale_size_continuous(range = c(0,10), breaks=c("0", "1", "10", "100", "1000", "10000")) +
theme_dark()+
guides(size= guide_legend(reverse=TRUE))+
theme(tern.axis.title.R = element_text(hjust=0.6))
df <- py$dfyears(1800)
label = seq(0,1,by=.2)
ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title="1800", fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white")+ #Lighter blue
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
# scale_size(range = c(num_min, num_max))
scale_size_continuous(range = c(0,10), breaks=c("0", "1", "10", "100", "1000")) +
theme_dark()+
guides(size= guide_legend(reverse=TRUE))+
theme(tern.axis.title.R = element_text(hjust=0.6))
