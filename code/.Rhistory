scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(l$p_1550, l$p_1600, l$p_1650, l$p_1700, l$p_1750, l$p_1800, l$p_1850, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
fig <- grid.arrange(grobs = l, ncols = 2)
ggsave("../output/heat_fig.png", fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(l$p_1550, l$p_1600, l$p_1650, l$p_1700, l$p_1750, l$p_1800, l$p_1850, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
fig <- grid.arrange(grobs = l, ncol = 2)
ggsave("../output/heat_fig.png", fig)
fig <- ggarrange(l, ncol = 2)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(l$p_1550, l$p_1600, l$p_1650, l$p_1700, l$p_1750, l$p_1800, l$p_1850, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
fig <- ggarrange(l, ncol = 2)
ggsave("../output/heat_fig.png", fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(l$p_1550, l$p_1600, l$p_1650, l$p_1700, l$p_1750, l$p_1800, l$p_1850, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
fig <- ggarrange(plotlist = l, ncol = 2)
ggsave("../output/heat_fig.png", fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(l$p_1550, l$p_1600, l$p_1650, l$p_1700, l$p_1750, l$p_1800, l$p_1850, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
fig <- ggarrange(plots = l, ncol = 2)
ggsave("../output/heat_fig.png", fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(l$p_1550, l$p_1600, l$p_1650, l$p_1700, l$p_1750, l$p_1800, l$p_1850, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
# fig <- ggarrange(plots = l, ncol = 2)
fig <- do.call(ggarrange, c(l, list(ncol = 2)))
ggsave("../output/heat_fig.png", fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(l$p_1550, l$p_1600, l$p_1650, l$p_1700, l$p_1750, l$p_1800, l$p_1850, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
# fig <- ggarrange(plots = l, ncol = 2)
fig <- do.call(ggarrange, c(l, list(ncol = 2)))
# ggsave("../output/heat_fig.png", fig)
fig
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(l$p_1550, l$p_1600, l$p_1650, l$p_1700, l$p_1750, l$p_1800, l$p_1850, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
# fig <- ggarrange(plots = l, ncol = 2)
fig <- do.call(ggarrange, c(l, list(ncol = 2, common.legeng = TRUE, legend = "right")))
# ggsave("../output/heat_fig.png", fig)
fig
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(l$p_1550, l$p_1600, l$p_1650, l$p_1700, l$p_1750, l$p_1800, l$p_1850, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
# fig <- ggarrange(plots = l, ncol = 2)
fig <- do.call(ggarrange, c(l, list(ncol = 2, common.legend = TRUE, legend = "right")))
# ggsave("../output/heat_fig.png", fig)
fig
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(l$p_1550, l$p_1600, l$p_1650, l$p_1700, l$p_1750, l$p_1800, l$p_1850, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
# fig <- ggarrange(plots = l, ncol = 2)
fig <- do.call(ggarrange, c(l, list(ncol = 2, common.legend = TRUE, legend = "right")))
ggsave("../output/heat_fig.png", fig)
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(l$p_1550, l$p_1600, l$p_1650, l$p_1700, l$p_1750, l$p_1800, l$p_1850, ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")
# fig <- ggarrange(plots = l, ncol = 2)
fig <- do.call(ggarrange, c(l, list(ncol = 2, common.legend = TRUE, legend = "right")))
# ggsave("../output/heat_fig.png", fig)
print(fig)
install.packages("patchwork")
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(plots = l, ncol = 2)
fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
# ggsave("../output/heat_fig.png", fig)
print(fig)
?wrap_plots
library(ggtern)
library(ggplot2)
library(tidyverse)
library(ggpubr)
library(patchwork)
?wrap_plots
#Doesn't work yet
group <- seq(1550,1850,by=50) #Select years for figure
l <- list()
label = seq(0,1,by=.2)
for (x in group) {
df <- py$dfyears(x)
p <- ggtern(df, aes(x = df$Politics, y = df$Religion, z = df$Science)) +
geom_tri_tern(bins=5,aes(fill=..stat.., value=df$Percentile),fun=mean) +
stat_tri_tern(bins=5,fun=mean, geom= 'point',
aes(size=..count..,value=df$Percentile),
color="white",centroid=TRUE) +
labs(x = "Politics", y = "Religion", z = "Science", title=x, fill="Percentile", size="Volumes") +
#  scale_fill_gradient(low="blue", high="red", na.value="white") +    #Uncomment for red/blue theme
# scale_fill_gradient(low="blue", high="red", na.value="white", limits = c(0,1)) + #Uncomment for red/blue theme with full gradient scale
# scale_fill_gradient(low="#56B1F7",high="#132B43", na.value="white",limits=c(0,1))+ #Uncomment for blue theme with full percentile gradient scale
# scale_fill_gradient(low = "#56B1F7",high="#132B43", na.value="white")+#Uncomment for blue theme
scale_fill_gradient(low = "#56c7f7",high="#132B43", na.value="white", limits = c(opt_min, opt_max))+#Lighter blue
scale_size_continuous(range = c(0,10),
limits = c(num_min, num_max),
breaks = c(10, 100, 1000, 2500, 5000, 8000, 12500)) + #Set limits and breaks of volume dots
scale_T_continuous(limits=c(0,1.0),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_L_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label) +
scale_R_continuous(limits=c(0.0,1),
breaks=seq(0,1,by=0.2),
labels=label)+
theme_dark()+
guides(size= guide_legend(reverse=TRUE, order = 0))+
theme(tern.axis.title.R = element_text(hjust=0.6))
name <- paste("p",x, sep = "_")
tmp <- ggplotGrob(p)
l[[name]] <- tmp
}
# fig <- ggarrange(plots = l, ncol = 2)
# fig <- do.call(ggarrange, c(l, list(ncol = 2, nrow = 4, common.legend = TRUE, legend = "right")))
fig <- wrap_plots(l, ncol = 2, nrow = 4)
# ggsave("../output/heat_fig.png", fig)
print(fig)
